/**
 * Spring PetClinic
 * Spring PetClinic Sample Application.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package petclinic.api

import petclinic.model.RestError
import petclinic.model.Visit
import petclinic.model.VisitFields
import petclinic.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object VisitApi {

def apply(baseUrl: String = "http://localhost:9966/petclinic/api") = new VisitApi(baseUrl)
}

class VisitApi(baseUrl: String) {

  /**
   * Creates a visit.
   * 
   * Expected answers:
   *   code 200 : Visit (visit created successfully.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 304 :  (Not modified.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 400 : RestError (Bad request.)
   *   code 404 : RestError (Visit not found.)
   *   code 500 : RestError (Server error.)
   * 
   * @param visit The visit
   */
  def addVisit(visit: Visit
): Request[Either[ResponseException[String, Exception], Visit], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/visits")
      .contentType("application/json")
      .body(visit)
      .response(asJson[Visit])

  /**
   * Records the details of a new vet visit.
   * 
   * Expected answers:
   *   code 201 : Visit (The vet visit was sucessfully added.)
   *   code 400 : RestError (Bad request.)
   *   code 404 : RestError (Pet not found for this owner.)
   *   code 500 : RestError (Server error.)
   * 
   * @param ownerId The ID of the pet owner.
   * @param petId The ID of the pet.
   * @param visitFields The details of the new vet visit.
   */
  def addVisitToOwner(ownerId: Int, petId: Int, visitFields: VisitFields
): Request[Either[ResponseException[String, Exception], Visit], Any] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/owners/${ownerId}/pets/${petId}/visits")
      .contentType("application/json")
      .body(visitFields)
      .response(asJson[Visit])

  /**
   * Returns the visit or a 404 error.
   * 
   * Expected answers:
   *   code 200 : Visit (Visit details found and returned.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 304 :  (Not modified.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 400 : RestError (Bad request.)
   *   code 404 : RestError (Visit not found.)
   *   code 500 : RestError (Server error.)
   * 
   * @param visitId The ID of the visit.
   */
  def deleteVisit(visitId: Int
): Request[Either[ResponseException[String, Exception], Visit], Any] =
    basicRequest
      .method(Method.DELETE, uri"$baseUrl/visits/${visitId}")
      .contentType("application/json")
      .response(asJson[Visit])

  /**
   * Returns the visit or a 404 error.
   * 
   * Expected answers:
   *   code 200 : Visit (Visit details found and returned.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 304 :  (Not modified.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 400 : RestError (Bad request.)
   *   code 404 : RestError (Visit not found.)
   *   code 500 : RestError (Server error.)
   * 
   * @param visitId The ID of the visit.
   */
  def getVisit(visitId: Int
): Request[Either[ResponseException[String, Exception], Visit], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/visits/${visitId}")
      .contentType("application/json")
      .response(asJson[Visit])

  /**
   * Returns an array of visit .
   * 
   * Expected answers:
   *   code 200 : Seq[Visit] (visits found and returned.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 304 :  (Not modified.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 500 : RestError (Server error.)
   */
  def listVisits(
): Request[Either[ResponseException[String, Exception], Seq[Visit]], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/visits")
      .contentType("application/json")
      .response(asJson[Seq[Visit]])

  /**
   * Returns the visit or a 404 error.
   * 
   * Expected answers:
   *   code 200 : Visit (Visit details found and returned.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 304 :  (Not modified.)
   *              Headers :
   *                ETag - An ID for this version of the response.
   *   code 400 : RestError (Bad request.)
   *   code 404 : RestError (Visit not found.)
   *   code 500 : RestError (Server error.)
   * 
   * @param visitId The ID of the visit.
   * @param visit The visit
   */
  def updateVisit(visitId: Int, visit: Visit
): Request[Either[ResponseException[String, Exception], Visit], Any] =
    basicRequest
      .method(Method.PUT, uri"$baseUrl/visits/${visitId}")
      .contentType("application/json")
      .body(visit)
      .response(asJson[Visit])

}
